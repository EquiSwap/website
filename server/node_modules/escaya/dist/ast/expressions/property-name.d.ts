import { IdentifierReference } from './identifierreference';
import { Node } from '../node';
import { Expression, PropertyKey } from '.';
import { AssignmentExpression } from './assignment-expr';
import { BindingElement } from './binding-element';
import { BindingIdentifier } from './binding-identifier';
import { AssignmentElement } from './assignment-element';
import { IdentifierName } from './identifiername';
export interface PropertyName extends Node {
    readonly key: PropertyKey | IdentifierReference | IdentifierName;
    readonly value: AssignmentExpression | BindingElement | AssignmentElement | BindingIdentifier | Expression;
}
export declare function createPropertyName(key: PropertyKey, value: AssignmentExpression | BindingElement | AssignmentElement | BindingIdentifier): PropertyName;
//# sourceMappingURL=property-name.d.ts.map