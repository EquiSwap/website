import { Expression } from './';
import { Node } from '../node';
export declare type BinaryOperator = '||' | '&&' | '|' | '^' | '&' | '==' | '!=' | '===' | '!==' | '<' | '<=' | '>' | '>=' | 'in' | 'instanceof' | '<<' | '>>' | '>>>' | '+' | '-' | '*' | '/' | '%' | '**' | '??';
export interface BinaryExpression extends Node {
    readonly left: Expression;
    readonly operator: BinaryOperator;
    readonly right: Expression;
}
export declare function createBinaryExpression(left: Expression, operator: BinaryOperator, right: Expression): BinaryExpression;
//# sourceMappingURL=binary-expr.d.ts.map