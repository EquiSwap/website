"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UseRequestContext = void 0;
const MikroORM_1 = require("../MikroORM");
const RequestContext_1 = require("../utils/RequestContext");
function UseRequestContext(getContext) {
    return function (target, propertyKey, descriptor) {
        const originalMethod = descriptor.value;
        descriptor.value = async function (...args) {
            /* istanbul ignore next */
            const orm = getContext instanceof MikroORM_1.MikroORM ? getContext : (getContext?.() ?? this.orm);
            if (!(orm instanceof MikroORM_1.MikroORM)) {
                throw new Error('@UseRequestContext() decorator can only be applied to methods of classes with `orm: MikroORM` property, or with a callback parameter like `@UseRequestContext(() => orm)`');
            }
            return await RequestContext_1.RequestContext.createAsync(orm.em, async () => {
                return originalMethod.apply(this, args);
            });
        };
        return descriptor;
    };
}
exports.UseRequestContext = UseRequestContext;
